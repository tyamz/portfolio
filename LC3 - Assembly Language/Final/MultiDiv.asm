.ORIG x3000
AND R1, R1, #0
AND R2, R2, #0
IN
ADD R1, R0, #0
IN
ADD R2, R0, #0
LD R6, ASCII
NOT R6, R6
ADD R6, R6, #1
ADD R1, R6, R1
ADD R2, R6, R2
JSR Multiply
AND R0, R0, #0
JSR Division
HALT

ASCII .FILL x30
WRONG .STRINGZ "Oops! Something went wrong!"
ENDLINE .FILL x0A

Multiply:
AND R0, R0, #0
ADD R3, R1, #0
ADD R4, R2, #0
ADD R3, R3, #0
BRnz FAIL
ADD R4, R4, #0
BRnz FAIL
LOOP ADD R0, R0, R3
ADD R4, R4 #-1
BRp LOOP
LD R6, ASCII
ADD R0, R6, R0
AND R5, R5, #0
ADD R5, R5, R7
OUT
LD R0, ENDLINE
OUT
FAIL ADD R3, R3, #0
BRnz JUMP
ADD R4, R4, #0
BRnz JUMP
LEA R0, WRONG
PUTS
JUMP ADD R3, R3, #0
AND R7, R7, #0
ADD R7, R5, #0
RET

Division:
AND R0, R0, #0
AND R3, R3, #0
AND R4, R4, #0
ADD R3, R1, #0
ADD R3, R3, #0
BRnz FAIL1
ADD R4, R2, #0
ADD R4, R4, #0
BRnz FAIL1
NOT R4, R4
ADD R4, R4, #1
LOOP1 ADD R0, R0, #1
ADD R3, R3, R4
ADD R5, R3, R4
BRzp LOOP1
LD R6, ASCII
ADD R0, R6, R0
AND R5, R5, #0
ADD R5, R5, R7
OUT
LD R0, ENDLINE
OUT
FAIL1 ADD R3, R3, #0
BRnz JUMP1
ADD R4, R4, #0
BRnz JUMP1
LEA R0, WRONG
PUTS
JUMP1 ADD R3, R3, #0
AND R7, R7, #0
ADD R7, R5, #0
RET

.END